2.
Write a program in JavaScript to map the student ids, names and scores.
a) Add data for 3 students (use map functions)
b) Get Student Names using map functions
c) Delete Student Scores using map functions

d) Display 1 parameter (only value), 2 parameters (value + key), and 3
parameters (value + key + map) for the student




Sample Input:
"id": [ 1, 2, 3 ]
"name": [ 'Hitanshu', 'Ninad', 'Amandeep' ]
"scores": [ 90, 88, 92 ]
Output:
[ 'Hitanshu', 'Ninad', 'Amandeep' ]
-----one parameter-----
[ 1, 2, 3 ]
[ 'Hitanshu', 'Ninad', 'Amandeep' ]
[ 90, 88, 92 ]
-----two parameter-----
id 1, 2, 3
name Hitanshu,Ninad,Amandeep
scores 90,88,92
-----three parameter-----
id 1, 2, 3
Map(3) {
'id' => [ 67, 48, 29 ],
'name' => [ 'Hitanshu', 'Ninad', 'Amandeep' ],
'scores' => [ 90, 88, 92 ]
}
name Hitanshu,Ninad,Amandeep
Map(3) {
'id' => [ 1, 2, 3 ],
'name' => [ 'Hitanshu', 'Ninad', 'Amandeep' ],
'scores' => [ 90, 88, 92 ]
}
scores 90,88,92
Map(3) {
'id' => [ 1, 2, 3 ],
'name' => [ 'Hitanshu', 'Ninad', 'Amandeep' ],
'scores' => [ 90, 88, 92 ]
}





Ans:  


                                        // Sample Input
const ids = [1, 2, 3];
const names = ['Hitanshu', 'Ninad', 'Amandeep'];
const scores = [90, 88, 92];

                                     // Function to add data for 3 students using map functions
function addStudentsData() {
  const students = ids.map((id, index) => {
    return {
      id: id,
      name: names[index],
      scores: scores[index]
    };
  });

  return students;
}

                                      // Function to get Student Names using map functions
function getStudentNames(students) {
  const studentNames = students.map(student => student.name);
  return studentNames;
}

                                      // Function to delete Student Scores using map functions
function deleteStudentScores(students) {
  const studentsWithoutScores = students.map(student => {
    const { scores, ...studentWithoutScores } = student;
    return studentWithoutScores;
  });

  return studentsWithoutScores;
}

                        // Function to display 1 parameter (only value), 2 parameters (value + key), and 3 parameters (value + key + map) for the student
function displayStudentParameters(students) {
  // 1 parameter (only value)
  console.log('-----one parameter-----');
  students.forEach(student => console.log(student));

  // 2 parameters (value + key)
  console.log('-----two parameter-----');
  students.forEach(student => {
    for (const key in student) {
      console.log(key, student[key]);
    }
  });


                                               // 3 parameters (value + key + map)
  console.log('-----three parameter-----');
  students.forEach((student, index) => {
    console.log('id', student.id);
    console.log('Map', new Map(Object.entries(student)));
    console.log('name', students[index].name);
    console.log('Map', new Map(Object.entries(students[index])));
    console.log('scores', students[index].scores);
    console.log('Map', new Map(Object.entries(students[index])));
  });
}

                                // Call the functions


                                    // a) Add data for 3 students (use map functions)
const students = addStudentsData();

                                     // b) Get Student Names using map functions
const studentNames = getStudentNames(students);
console.log(studentNames);

                                       // c) Delete Student Scores using map functions
const studentsWithoutScores = deleteStudentScores(students);
console.log(studentsWithoutScores);

                                  // d) Display 1 parameter (only value), 2 parameters (value + key), and 3 parameters (value + key + map) for the student
displayStudentParameters(students);
